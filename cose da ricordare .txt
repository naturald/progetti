CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password';
<?php 

if(isset($_GET['sign_up']))
{
    echo "<a href='carrello.html'> ";
    echo "<img src='img/carrello.png' id='carrello' class='carrello'> "."</a> ";

    echo "<div style='position:absolute;top: 20px;right:30px;'> ";
    
    echo"<h2 class='hide' id='hide' style='font-size: 15px;  width: 150px;'>".'benvenuto '."</h2> ";
    echo "</div>";
    echo "<div style='display: block; width: fit-content;  margin-left: auto;  margin-right: auto;'> ";
    echo "<ul class='menu' style='display: table-cell;'> ";
    echo "<li><a href='index.html' style='text-decoration:none;'><h2 class='voci'>pag iniziale</h2></a></li> ";
    echo "<li><a href='index.html' style='text-decoration:none;'><h2 class='voci'>sconti</h2></a></li> ";
    echo "<li><a href='info.html' style='text-decoration:none;' ><h2 class='voci'>info</h2></a> </li> ";
    echo "<li><a href='index.html' style='text-decoration:none;'><h2 class='voci_hide' id='hide2'>logout</h2></a></li>"."</ul> ";
                            
}
else
{
    echo "<div style='position:absolute;top: 20px;right:30px;'>";
    echo "<button class='bottoni' id='btn' > ";
    echo "<h2 style='font-size: 18px;'>"."Login"."</h2>";            
    echo "</button> ";
    echo "</div> ";
    echo "<div style='display: block; width: fit-content;  margin-left: auto;  margin-right: auto;'> ";
    echo "<ul class='menu' style='display: table-cell;'> ";
    echo "<li><a href='index.html' style='text-decoration:none;'><h2 class='voci'>pag iniziale</h2></a></li> ";
    echo "<li><a href='index.html' style='text-decoration:none;'><h2 class='voci'>sconti</h2></a></li> ";
    echo "<li><a href='info.html' style='text-decoration:none;' ><h2 class='voci'>info</h2></a> </li> "."</ul>";
}


?>
insert users values(null,"csa","dfsf","sdff","citta");
$( selector ).load( URL );
select iduser from users where email ="citta";
TRUNCATE nome_tabella
atoi(Plet.c_str())
Student[] studentArray = new Student[7];
UNIQUE KEY (`Employee_Code`),
ALTER TABLE table_name AUTO_INCREMENT = value;
Denial of service = dos
Distributed Denial of Services = ddos

La multiplazione, o in inglese multiplexing, nelle telecomunicazioni, elettronica e reti di computer, è il meccanismo o tecnica di trasmissione 
per cui più canali trasmissivi in ingresso condividono la stessa capacità trasmissiva disponibile in uscita ovvero combinando più segnali analogici o flussi di dati digitali 
detti segnali tributari) in un solo segnale (detto multiplato) trasmesso in uscita su uno stesso collegamento fisico.

Un MAC address identifica una interfaccia di rete univoca presente in un dispositivo. Mentre gli indirizzi IP vengono assegnati dagli ISP e possono essere riassegnati 
quando i dispositivi vengono collegati e scollegati, gli indirizzi MAC sono legati a un adattatore fisico e vengono assegnati dai produttori.

def TCP = In telecomunicazioni e informatica il Transmission Control Protocol (TCP)
 è un protocollo di rete a pacchetto di livello di trasporto, appartenente alla suite di protocolli Internet,
che si occupa di controllo della trasmissione ovvero rendere affidabile la comunicazione dati in rete tra mittente e
 destinatario. Definito nella RFC 793, su di esso si appoggia gran parte delle applicazioni della rete Internet, 
è presente solo sui terminali di rete (host) e non sui nodi interni di commutazione della rete di trasporto, implementato 
come strato software di rete all'interno del sistema operativo di un host, e il terminale in trasmissione o in ricezione vi
 accede attraverso l'uso di opportune chiamate di sistema definite nelle API di sistema.

DOS=Disk Operating System 


//___________________hacker rank______________________//
    int A_home=0;
    int O_home=0;
    for(int i=0;i<apples.size();i++) 
    {
        if(apples[i]>=0)
            if(s<=(a+apples[i])&&(a+apples[i])<=t)
                A_home++;
    }
    for(int j=0;j<oranges.size();j++)
    {
        if(oranges[j]<=0)
            if(s<=(b+oranges[j])&&(b+oranges[j])<=t)
                O_home++;
    }
    cout<<A_home<<endl<<O_home;
    
    
    /*long x3_1;
    long x3_2; 
    bool flag=false;
    if(x1!=x2)
    {
        x3_1=x1+v1;
        x3_2=x2+v2;
        for(int i=0;i<1000;i++) 
        {
            if(x3_2==x3_1)
            {
                flag=true;
                break;
            }
            else
            {
                x3_1+=v1;
                x3_2+=v2;
            }   
        }
   
    }
    else
        flag=true;
   
   if(flag==true)
        return "YES";
    else
        return "NO";*/
    
    float x =(float)(x2 - x1)/(v1 - v2);
    int trn=int(trunc(x*100));
    if( trn % 100 != 0 || x < 0)
            return "NO";
        else
            return "YES";
            

--------------------------------------------------------            
  
    
    int div=0;
    if(a[a.size()-1]>b[b.size()-1])
    {
        for(int i=b[b.size()-1];i<(a[0]+1);i++)
        {
            int trov=0;
            for(int j=0;j<a.size();j++)
            {
                if((i%a[j])==0)
                    trov++;
            }
            for(int x=0;x<b.size();x++)
            {
                if((b[x]%i)==0)
                    trov++;
            }
            if(trov==(a.size()+b.size()))
                div++;
        }
    }
    else
    {
        for(int i=a[a.size()-1];i<(b[0]+1);i++)
        {
            int trov=0;
            for(int j=0;j<a.size();j++)
            {
                if((i%a[j])==0)
                    trov++;
            }
            for(int x=0;x<b.size();x++)
            {
                if((b[x]%i)==0)
                    trov++;
            }
            if(trov==(a.size()+b.size()))
                div++;
        }
    }
    return div;

//______________________________________________________//

